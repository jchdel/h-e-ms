#!/bin/bash
##########################################
# MQTT Shell Listen & inject to MQTT     #
##########################################
ME=$(basename $0)
[ -f /etc/default/$ME ] && . /etc/default/$ME
[ -z "$MQTT_TOPIC" ] && MQTT_TOPIC=emon
##########################################
ctrl_c() {
	[ -z $DEBUG ] || echo "\nCleaning up..." >&2
	if [ "$?" -eq "0" ];
	then
		[ -z $DEBUG ] || echo "Exit success" >&2
		exit 0
	else
		[ -z $DEBUG ] || echo "Exit failure" >&2
		exit 1
	fi
}
##########################################
listen(){
	local oIFS=$IFS
	IFS=' '
	while read line 
	do
		timestamp=$(date +%s)
		[ -z $DEBUG ] || echo "MQTT: $line"
		IFS=' '
		read -ra r <<< "$line"
		# extract zigbee devive friendly  name from topic
		# TOPIC is of the form
		#    emon/<sensor_id>/<sensor_type>
		if [ ${#r[@]} -eq 2 ]; then
			topic="${r[0]}"
			message="${r[1]}"
		elif [ ${#r[@]} -eq 3 ]; then
			topic="${r[0]}_${r[1]}"
			message="${r[2]}"
		else
			continue
		fi
		IFS='/'
		read -ra t <<< "$topic"
		[ "${t[0]}" == "$MQTT_TOPIC" ] || continue
		[ ${#t[@]} -eq 3 ] || continue
		id=${t[1]}
		key=${t[2]}
		# publish to local sensors collection infra (will be forwarded by mosquitto to upstream)
		echo "$timestamp;$message" | mosquitto_pub -l -u emonpi -P emonpimqtt2016 -t sensors/$id/$key
		[ $? -ne 0 ] && echo "Failed to publish $value to topic=sensors/$id/$key"
		
	done
	IFS=$oIFS
}
##########################################
trap ctrl_c INT
mosquitto_sub -v -u emonpi -P emonpimqtt2016 -t "$MQTT_TOPIC/#" | listen
