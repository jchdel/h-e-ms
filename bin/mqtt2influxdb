#!/bin/bash
##########################################
# MQTT Shell Listen & inject to influxDB #
##########################################
ME=$(basename $0)
[ -f /etc/default/$ME ] && . /etc/default/$ME
[ -z "$WORKDIR" ] && WORKDIR=/var/local/$ME
[ -z "$MQTT_TOPIC" ] && MQTT_TOPIC=sensors
# Some default values
CUR=$WORKDIR/iql-cur
SEN=$WORKDIR/iql-sent
TMP=$WORKDIR/iql-tmp
mkdir -p $CUR
mkdir -p $SEN
mkdir -p $TMP
##########################################
ctrl_c() {
	[ -z $DEBUG ] || echo "\nCleaning up..." >&2
	if [ "$?" -eq "0" ];
	then
		[ -z $DEBUG ] || echo "Exit success" >&2
		exit 0
	else
		[ -z $DEBUG ] || echo "Exit failure" >&2
		exit 1
	fi
}
##########################################
store_locally(){
	#store_locally $project $group $class $id $value $timestamp
	[ $# -eq 6 ] || return 1
	[ -z "$MYPROJECT" ] && return 2
	[ x"$1" == x"$MYPROJECT" ] || return 3
	[ -z "$WORKDIR" ] && return 4
	mkdir -p $WORKDIR/$3/$4
	echo $5 > $WORKDIR/$3/$4/value
}
##########################################
send_to_influxdb() {
	#send_to_influxdb $project $group $class $id $value $timestamp
	[ $# -eq 6 ] || return 1
	LINE="$3,project=$1,group=$2,sensorid=$4 $5 $6"
	IQL=$CUR/$1.$2.iql
	TIQL=$TMP/$1.$2.$(date +%s).iql
	SIQL=$SEN/$1.$2.$(date +%s).iql
	echo $LINE >> $IQL
	mv $IQL $TIQL
	#influx -execute "CREATE DATABASE $MQTT_TOPIC"
	INTO= # for retention policy
	influx -database $MQTT_TOPIC -precision s -execute "INSERT $INTO $LINE"
	if [ $? -ne 0 ] 
	then 
		echo "INFLUXDB FAILURE: $LINE" >&2
		cat $TIQL >> $IQL
		rm $TIQL
	else
		[ -z $DEBUG ] || echo "INFLUX OK: $LINE" >&2
		mv $TIQL $SIQL
	fi
}
##########################################
listen(){
	# messages are sent for instance with
	# mosquitto_pub -h 192.168.8.108 \
	#	-t $MQTT_TOPIC/poc/test/dummy/dummy1 -m "$(date +%s);$value" 
	local oIFS=$IFS
	IFS=' '
	while read line 
	do
		[ -z $DEBUG ] || echo "MQTT: $line"
		IFS=' '
		read -ra r <<< "$line"
		# extract timeserie from topic
		# TOPIC is of the form
		#    $MQTT_TOPIC/<project>/<group>/<sensor_class>/<sensor_id>
		topic="${r[0]}"
		IFS='/'
		read -ra t <<< "$topic"
		[ "${t[0]}" == "$MQTT_TOPIC" ] || continue
		# test if array has 3 members
		[ ${#t[@]} -eq 5 ] || continue
		project=${t[1]}
		group=${t[2]}
		class=${t[3]}
		id=${t[4]}
		# extract timestamp and value from message
		# MESSAGE is of the form
		#     <timestamp>;<value>
		message="${r[1]}"
		IFS=';'
		read -ra m <<< "$message"
		# test if array has 2 members
		[ ${#m[@]} -eq 2 ] || continue
		# TODO develop following filter...
		# whatif if singe value or key=value batch
		# test if '=' is present in the string?
		[ 0 ] && value="value=${m[1]}" || value="${m[1]}"
		timestamp=${m[0]}
		# send_to_influxdb topic message
		send_to_influxdb $project $group $class $id $value $timestamp
		store_locally $project $group $class $id $value $timestamp
		aend=$(date +%s)
		duration=$(($aend-$timestamp))
		[ -z "$DEBUG" ] || echo "Data in transit for $duration seconds" >&2
	done
	IFS=$oIFS
}
##########################################
trap ctrl_c INT
mosquitto_sub -v -t $MQTT_TOPIC/# | listen
