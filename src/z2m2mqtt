#!/bin/bash
# WE USE BASHIMS
##########################################
# MQTT Shell Listen & inject to MQTT     #
##########################################
ME=$(basename $0)
[ -f /etc/conf.d/$ME ] && . /etc/conf.d/$ME
[ -z "$MQTT_TOPIC_IN" ] && MQTT_TOPIC_IN=zigbee2mqtt
[ -z "$MQTT_TOPIC_OUT" ] && MQTT_TOPIC_OUT=sensors
# AUTH=...
##########################################
ctrl_c() {
	[ -z $DEBUG ] || echo "\nCleaning up..." >&2
	if [ "$?" -eq "0" ];
	then
		[ -z $DEBUG ] || echo "Exit success" >&2
		exit 0
	else
		[ -z $DEBUG ] || echo "Exit failure" >&2
		exit 1
	fi
}
##########################################
listen(){
	local oIFS=$IFS
	IFS=' '
	while read line 
	do
		[ -z $DEBUG ] || echo "MQTT: $line"
		logger -t $ME "MQTT: $line"
		# get the timestamp ASAP
		timestamp=$EPOCHSECONDS # bash v5.0+
		IFS=' '
		read -ra r <<< "$line"
		# extract zigbee devive friendly  name from topic
		# TOPIC is of the form
		#    z2m/<sensor_id>
		topic="${r[0]}"
		message="${r[1]}"
		IFS='/'
		read -ra t <<< "$topic"
		[ "${t[0]}" == "$MQTT_TOPIC_IN" ] || continue
		[ ${#t[@]} -eq 2 ] || continue
		id=${t[1]}
		# filter message to remove unwanted information
		message=$(echo "$message" | jq -c -M 'del(.update)|del(.child_lock)|del(.indicator_mode)|del(.power_outage_memory)|del(.update_available)')
		echo "$message" | jq -c -M -r '.| keys_unsorted[]' |
		while IFS= read -r key
		do
			value=$(echo "$message" | jq -c -M -r ".$key")
			# publish to local sensors collection infra (will be forwarded by mosquitto to upstream)
			echo "$timestamp;$value" | mosquitto_pub -l $AUTH -t $MQTT_TOPIC_OUT/$id/$key
			[ $? -ne 0 ] && \
				logger -t $ME "Failed to publish $value to topic=$MQTT_TOPIC_OUT/$id/$key" \
				|| logger -t $ME "Publish $value to topic=$MQTT_TOPIC_OUT/$id/$key" 
		done 
		
	done
	IFS=$oIFS
}
##########################################
trap ctrl_c INT
set -x
mosquitto_sub -v $AUTH -t "$MQTT_TOPIC_IN/#" | listen
